name: Build & Auto Release

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    name: Build & Release on main
    runs-on: windows-latest
    permissions:
      contents: write  # needed to create release/tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore
        run: dotnet restore Enfolderer.sln
      - name: Build Release
        run: dotnet build Enfolderer.sln -c Release --no-restore
      - name: Publish Self-contained Single File (win-x64)
        run: >-
          dotnet publish Enfolderer.App -c Release -r win-x64 --self-contained true
          -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true
          -o publish/win-x64
      - name: Publish Framework-dependent Single File (win-x64)
        run: >-
          dotnet publish Enfolderer.App -c Release -r win-x64 --self-contained false
          -p:PublishSingleFile=true -p:DebugType=None -p:DebugSymbols=false
          -o publish/win-x64-fd
      - name: Create Zip Packages
        shell: pwsh
        run: |
          Compress-Archive -Path publish/win-x64/* -DestinationPath Enfolderer-win-x64-selfcontained.zip
          Compress-Archive -Path publish/win-x64-fd/* -DestinationPath Enfolderer-win-x64-frameworkdependent.zip
      - name: Compute Tag
        id: tag
        shell: pwsh
        run: |
          git fetch --prune --unshallow 2>$null
          git fetch --tags 2>$null
          $msg = (git log -1 --pretty=%B)
          $all = git tag --list "v[0-9]*.[0-9]*.[0-9]*"
          if (-not $all) {
            $ver = [version]"0.1.0"
          } else {
            $sorted = $all | ForEach-Object { $_ -replace '^v','' } | Sort-Object {[version]$_}
            $last = $sorted[-1]
            $ver = [version]$last
            if ($msg -match '#major') {
              $ver = [version]::new($ver.Major+1,0,0)
            } elseif ($msg -match '#minor') {
              $ver = [version]::new($ver.Major,$ver.Minor+1,0)
            } else {
              $ver = [version]::new($ver.Major,$ver.Minor,$ver.Build+1)
            }
          }
          $tag = "v$ver"
          echo "tag=$tag" >> $env:GITHUB_OUTPUT
      - name: Push Tag
        shell: pwsh
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.tag.outputs.tag }}
          git push origin ${{ steps.tag.outputs.tag }}
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.tag }}
          body: "Automated release for commit ${{ github.sha }}"
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            Enfolderer-win-x64-selfcontained.zip
            Enfolderer-win-x64-frameworkdependent.zip
            binder_alt_arts.txt
            binder_promos.txt
            binder_secret_lair.txt
            binder_secret_lair_bonus.txt
            binder_special_guests.txt
            binder_special_sets.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
